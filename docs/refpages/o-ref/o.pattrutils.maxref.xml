<?xml version="1.0" encoding="utf-8" standalone="yes"?>

<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<!--This is an automatically generated file. DO NOT EDIT THIS FILE DIRECTLY. Rather, use the _ref.xml files found in the 'edits' folder.-->
<c74object name="o.pattrutils" module="max" category="Patching">
	<digest>
		Collection of pattr/patcher utilities
	</digest>
	<description>
		Collection of javascript functions to handle <o>pattr</o> and <o>patcher</o> related stuff. The object is programmed to easily be included within patchers so any pattr hierarchy (ex: parent::num) or any other hierarchical reference that is sent out the outlet refers to the patcher object that contains <o>o.pattrutils</o> and not to the <o>js</o> object itself. 
	</description>
	<!--METADATA-->
	<metadatalist>
		<metadata name="author">
			p1nh0
		</metadata>
		<metadata name="tag">
			Open-Library
		</metadata>
		<metadata name="tag">
			Patching
		</metadata>
		<metadata name="tag">
			Data
		</metadata>
		<metadata name="reference">
			TEXT_HERE
		</metadata>
		<metadata name="license">
			TEXT_HERE
		</metadata>
	</metadatalist>
	<!--INLETS-->
	<inletlist>
		<inlet id="0" type="anything">
			<digest>
				Function Call
			</digest>
			<description>
				TEXT_HERE
			</description>
		</inlet>
	</inletlist>
	<!--OUTLETS-->
	<outletlist>
		<outlet id="0" type="list">
			<digest>
				Data Outlet
			</digest>
			<description>
				Outputs data from the function call.
			</description>
		</outlet>
		<outlet id="1" type="list">
			<digest>
				Dump Outlet
			</digest>
			<description>
				Outputs data from &quot;set..&quot; functions, when they are completed.
			</description>
		</outlet>
	</outletlist>
	<!--ARGUMENTS-->
	<!--MESSAGES-->
	<methodlist>
		<method name="gettitle">
			<arglist />
			<digest>
				Get Window Title
			</digest>
			<description>
				Outputs the window title without &quot;unlocked&quot; or &quot;presentation&quot; flags.
			</description>
		</method>
		<method name="getparenttitle">
			<arglist />
			<digest>
				Get Parent Patcher Window Title
			</digest>
			<description>
				Outputs the parent patcher's window title without &quot;unlocked&quot; or &quot;presentation&quot; flags.
			</description>
		</method>
		<method name="setvarname">
			<arglist>
				<arg name="setvarname" optional="0" type="symbol" />
			</arglist>
			<digest>
				Set Scripting Name
			</digest>
			<description>
				Sets the scripting name (varname) of the patcher containg <o>o.pattrutils</o> and signals through the right outlet when done.
			</description>
		</method>
		<method name="getvarname">
			<arglist />
			<digest>
				Get Scripting Name
			</digest>
			<description>
				Output the scripting name (varname) of the patcher containg <o>o.pattrutils</o>.
			</description>
		</method>
		<method name="getparentvarname">
			<arglist />
			<digest>
				Get Parent Scripting Name
			</digest>
			<description>
				Output the scripting name (varname) of the patcher containing a subpatcher with <o>o.pattrutils</o>.
			</description>
		</method>
		<method name="gethierarchy">
			<arglist />
			<digest>
				Get Hierarchy
			</digest>
			<description>
				Output the hierarchy from the top-level patch to the patcher containing <o>o.pattrutils</o>. The hierarchy is sent in a pattr-like format containing the scripting names of all subpatchers in the hierarchy (ex: myPatch::mySubpatch::myNumber). Since top-level patches do not have scripting names, <o>o.pattrutils</o> will introduce the window title in the beginning of the hierarchy.
			</description>
		</method>
		<method name="findparent">
			<arglist />
			<digest>
				Find Parent Hierarchies 
			</digest>
			<description>
				Similar to <m>gethierarchy</m> but instead of sending the hierarchy containing scripting names sends the hierarchy ready to add a name to the end and bind to objects from the top-level. You can also <o>pattrmarker</o> for that purpose.
			</description>
		</method>
		<method name="gettoplevel">
			<arglist />
			<digest>
				Get Top Level Window Title 
			</digest>
			<description>
				Outputs the top-level patcher's window title WITH &quot;unlocked&quot; or &quot;presentation&quot; flags.
			</description>
		</method>
		<method name="getpath">
			<arglist />
			<digest>
				Get File Path
			</digest>
			<description>
				If <o>o.pattrutils</o> is on the top-level of a maxpat this message will send the file's directory on the hard-drive. You can also achieve this with the <m>path</m> message to <o>thispatcher</o>.
			</description>
		</method>
		<method name="getparentpath">
			<arglist />
			<digest>
				Get File Path
			</digest>
			<description>
				If <o>o.pattrutils</o> is inside a subpatcher on the top-level of a maxpat this message will send the file's directory on the hard-drive.
			</description>
		</method>
	</methodlist>
	<!--ATTRIBUTES-->
	<attributelist>
		<attribute name="defer" get="1" set="1" type="int" size="1">
			<digest>
				Defer
			</digest>
			<description>
				&quot;0&quot;: execute on high-priority thread.
				<br />
				<br />
				&quot;1&quot;: execute on low-priority thread.
				(default = 0)
			</description>
			<attributelist>
				<attribute name="basic" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="default" get="1" set="1" type="int" size="1" value="0" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Defer" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="onoff" />
			</attributelist>
		</attribute>
	</attributelist>
	<!--EXAMPLE-->
	<!--SEEALSO-->
	<seealsolist>
		<seealso name="pattr" />
		<seealso name="pattrforward" />
		<seealso name="pattrmarker" />
		<seealso name="pattrhub" />
		<seealso name="pattrstorage" />
	</seealsolist>
	<misc name="Output">
		<entry name="list">
			<description>
				Note: all output messages are preceded by the function that triggered it. Set functions are tagged as they are while other functions are shortened, by removing the first word (ex: findparent -> parent, gettitle -> title, getpath -> path, etc...)
				<br />
				<br />  
				Out right outlet: output &quot;done&quot; when a set function has finished. (ex: setvarname done)
				<br />
				<br />  
				Out left outlet: data relative to the triggered function. Names containg spaces are usually sent as one symbol.    
			</description>
		</entry>
	</misc>
</c74object>
