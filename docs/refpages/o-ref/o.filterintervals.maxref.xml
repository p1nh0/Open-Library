<?xml version="1.0" encoding="utf-8" standalone="yes"?>

<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<!--This is an automatically generated file. DO NOT EDIT THIS FILE DIRECTLY. Rather, use the _ref.xml files found in the 'edits' folder.-->
<c74object name="o.filterintervals" module="max" category="MIDI">
	<digest>
		Filter notes by interval
	</digest>
	<description>
		Avoid certain note intervals.
	</description>
	<!--METADATA-->
	<metadatalist>
		<metadata name="author">
			p1nh0
		</metadata>
		<metadata name="tag">
			Open-Library
		</metadata>
		<metadata name="tag">
			MIDI
		</metadata>
		<metadata name="tag">
			Control
		</metadata>
	</metadatalist>
	<!--INLETS-->
	<inletlist>
		<inlet id="0" type="INLET_TYPE">
			<digest>
				Filter intervals
			</digest>
			<description>
				Input notes are filtered if the interval to the previous note is registered in the intervals list.
			</description>
		</inlet>
		<inlet id="1" type="INLET_TYPE">
			<digest>
				Intervals to filter
			</digest>
			<description>
				List of intervals to filter, allowing only input notes to pass to the left outlet if the interval from the previous note is not in the intervals list.
				The maximum list size is 255 {-127..127}
			</description>
		</inlet>
	</inletlist>
	<!--OUTLETS-->
	<outletlist>
		<outlet id="0" type="OUTLET_TYPE">
			<digest>
				Allowed notes
			</digest>
			<description>
				Input notes are filtered if the interval from the previous note is not registered in the intervals list, otherwise input notes are passed to the outlet.
			</description>
		</outlet>
		<outlet id="1" type="OUTLET_TYPE">
			<digest>
				Note if filtered
			</digest>
			<description>
				Input notes are passed to this outlet if the interval from the previous note is registered in the intervals list.
			</description>
		</outlet>
		<outlet id="2" type="OUTLET_TYPE">
			<digest>
				Filtered interval
			</digest>
			<description>
				If an input note is filtered, the corresponding interval is sent out this outlet.
			</description>
		</outlet>
	</outletlist>
	<!--ARGUMENTS-->
	<objarglist>
		<objarg name="intervals" optional="1" type="int/list">
			<digest>
				Intervals to filter
			</digest>
			<description>
				Store a list containing note intervals to filter. If no argument is present there will be no filtered intervals.
			</description>
		</objarg>
	</objarglist>
	<!--MESSAGES-->
	<methodlist>
		<method name="int">
			<arglist>
				<arg name="input" optional="0" type="int" />
			</arglist>
			<digest>
				Filter intervals (pitch)
			</digest>
			<description>
				Input notes are filtered if the interval to the previous note is registered in the intervals list.
				Note that <o>o.filterintervals</o> <m>mode</m> attribute must be set to &quot;pitch&quot; in order to correctly process input integers. 
			</description>
		</method>
		<method name="list">
			<arglist>
				<arg name="input" optional="0" type="list" />
			</arglist>
			<digest>
				Filter intervals (pitch-velocity)
			</digest>
			<description>
				Input notes are filtered if the interval to the previous note is registered in the intervals list, and the velocity value of the allowed note is sent along with it.
				Note that <o>o.filterintervals</o> <m>mode</m> attribute must be set to &quot;note&quot; in order to correctly process input lists. Also note that these lists must contain only two elements: pitch and velocity.
			</description>
		</method>
		<method name="set">
			<arglist>
				<arg name="intervals" optional="0" type="list" />
			</arglist>
			<digest>
				Set intervals to filter
			</digest>
			<description>
				List of intervals to filter, allowing only input notes to pass to the left outlet if the interval from the previous note is not in the intervals list.
				This is the same as sending a list to the right inlet.
				The maximum list size is 255 {-127..127}.
			</description>
		</method>
	</methodlist>
	<!--ATTRIBUTES-->
	<attributelist>
		<attribute name="mode" get="1" set="1" type="symbol" size="1">
			<digest>
				Input mode
			</digest>
			<description>
				If <m>mode</m> is set to &quot;pitch&quot;, <o>o.filterintervals</o> will take single numbers as input, treating them as pitches. 
				And if the <m>mode</m> attribute is set to &quot;note&quot;, <o>o.filterintervals</o> will take pitch-velocity pairs as input, passing the corresponding note's velocity values along the outlets.
				(default = &quot;note&quot;)
			</description>
			<attributelist>
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Input Mode" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="type" />
				<attribute name="units" get="1" set="1" type="symbol" size="1" value="note" />
			</attributelist>
		</attribute>
		<attribute name="direction" get="1" set="1" type="int" size="1">
			<digest>
				Interval direction
			</digest>
			<description>
				If set to &quot;0&quot; the intervals direction will be ignored filtering both descending and ascending intervals. So if your intervals list is &quot;1&quot;, <o>o.filterintervals</o> will filter intervals equal to &quot;1&quot; as well as intervals equal to  &quot;-1&quot;. 
				<br></br>
				But if the <m>direction</m> attribute is set to  &quot;1&quot;, <o>o.filterintervals</o> becomes sensitive the interval direction (ascending or descending). So if your intervals list is &quot;1&quot;, <o>o.filterintervals</o> will filter intervals equal to &quot;1&quot; but it won't filter intervals equal to  &quot;-1&quot;.
				<br></br>
				(default = 0)
			</description>
			<attributelist>
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Input Mode" />
				<attribute name="style" get="1" set="1" type="item" size="1" value="direction" />
				<attribute name="units" get="1" set="1" type="symbol" size="1" value="0" />
			</attributelist>
		</attribute>
	</attributelist>
	<!--EXAMPLE-->
	<examplelist>
		<example img="" caption="Filter dissonant intervals" />
	</examplelist>
	<!--SEEALSO-->
	<seealsolist>
		<seealso name="clip" />
		<seealso name="maximum" />
		<seealso name="minimum" />
		<seealso name="split" />
		<seealso name="expr" />
		<seealso name="o.clipnotes" />
		<seealso name="o.heldnotes" />
		<seealso name="o.midi.prob-rhythm" />
		<seealso name="o.note" />
		<seealso name="o.note2vpr" />
		<seealso name="o.vpr2note" />
		<seealso name="o.sortnotes" />
		<seealso name="o.stripnotetype" />
		<seealso name="o.chordidentifier" />
		<seealso name="o.findclosestnote" />
		<seealso name="o.note2pitchclass" />
		<seealso name="o.stripvelocity" />
	</seealsolist>
	<misc name="Output">
		<entry name="int/list">
			<description>
				Out left outlet: Allowed notes. If the <m>mode</m> attribute is set to &quot;pitch&quot; the output will be in integer format, and if it is set to &quot;note&quot; the output will be a list with two items, containing the pitch and velocity values.
				<br></br>
				<br></br>
				Out middle outlet: Filtered notes. If the <m>mode</m> attribute is set to &quot;pitch&quot; the output will be in integer format, and if it is set to &quot;note&quot; the output will be a list with two items, containing the pitch and velocity values.
			</description>
		</entry>
		<entry name="int">
			<description>
				Out right outlet: Filtered intervals. 
			</description>
		</entry>
	</misc>
</c74object>