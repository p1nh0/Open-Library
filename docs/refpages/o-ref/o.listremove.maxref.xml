<?xml version="1.0" encoding="utf-8" standalone="yes"?>

<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<!--This is an automatically generated file. DO NOT EDIT THIS FILE DIRECTLY. Rather, use the _ref.xml files found in the 'edits' folder.-->
<c74object name="o.listremove" module="max" category="Lists">
	<digest>
		Remove items from a stored list
	</digest>
	<description>
		Similar to <o>zl.filter</o> but it doesn't remove duplicates. Instead it only removes matched input occurences.
	</description>
	<!--METADATA-->
	<metadatalist>
		<metadata name="author">
			p1nh0
		</metadata>
		<metadata name="tag">
			Open-Library
		</metadata>
		<metadata name="tag">
			Lists
		</metadata>
	</metadatalist>
	<!--INLETS-->
	<inletlist>
		<inlet id="0" type="INLET_TYPE">
			<digest>
				Filter items from stored list
			</digest>
			<description>
				Retrieves remaining list if items are removed.
			</description>
		</inlet>
		<inlet id="1" type="INLET_TYPE">
			<digest>
				Store list to filter 
			</digest>
			<description>
				Stored list from which to remove items. 
			</description>
		</inlet>
	</inletlist>
	<!--OUTLETS-->
	<outletlist>
		<outlet id="0" type="OUTLET_TYPE">
			<digest>
				Remaining list
			</digest>
			<description>
				Stored list with removed input items. If no input items match any of the stored list items there will be no output.
			</description>
		</outlet>
		<outlet id="1" type="OUTLET_TYPE">
			<digest>
				Done
			</digest>
			<description>
				Sends a bang when all items are removed.
			</description>
		</outlet>
	</outletlist>
	<!--ARGUMENTS-->
	<objarglist>
		<objarg name="initial-list" optional="1" type="list">
			<digest>
				Set the initial stored list
			</digest>
			<description>
				Sets the initial list from which to remove elements. 
			</description>
		</objarg>
	</objarglist>
	<!--MESSAGES-->
	<methodlist>
		<method name="int/float/list">
			<arglist>
				<arg name="input" optional="0" type="int/float/list" />
			</arglist>
			<digest>
				Remove items from stored list
			</digest>
			<description>
				Triggers output whenever any elements from input match a stored items and removes those items from storage.
			</description>
		</method>
		<method name="reset">
			<arglist />
			<digest>
				Reset memory
			</digest>
			<description>
				Start from last stored list.
			</description>
		</method>
		<method name="clear">
			<arglist />
			<digest>
				Clear storage memory
			</digest>
			<description>
				Empty memory storage. When cleared <o>o.listremove</o> stays inactive until a list is provided for storage through the right inlet.
			</description>
		</method>
	</methodlist>
	<!--ATTRIBUTES-->
	<attributelist>
		<attribute name="maxsize" get="1" set="1" type="int" size="1">
			<digest>
				Maximum List Size
			</digest>
			<description>
				Maximum number of items to process. If the input list exceeds this size, excess items will be truncated. Doesn't affect lists received in the left outlet. 
				(default = 256)
			</description>
			<attributelist>
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Maximum List Size" />
				<attribute name="style" get="1" set="1" type="int" size="1" value="items" />
				<attribute name="units" get="1" set="1" type="int" size="1" value="256" />
			</attributelist>
		</attribute>
		<attribute name="loop" get="1" set="1" type="int" size="1">
			<digest>
				Loop
			</digest>
			<description>
				If turned off (zero) <o>o.listremove</o> will ignore input streams once all stored items have been removed. 
				If turned on (non-zero) resets <o>o.listremove</o> when all stored items have been removed, starting from the last input storage list.
				(default = 0)
			</description>
			<attributelist>
				<attribute name="basic" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Loop" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="onoff" />
			</attributelist>
		</attribute>
	</attributelist>
	<!--EXAMPLE-->
	<examplelist>
		<example img="" caption="o.listremove vs. zl.filter" />
	</examplelist>
	<!--SEEALSO-->
	<seealsolist>
		<seealso name="zl" />
		<seealso name="iter" />
		<seealso name="o.crossover" />
		<seealso name="o.listaccum" />
		<seealso name="o.listchange" />
		<seealso name="o.listcomparison" />
		<seealso name="o.list.match" />
		<seealso name="o.pattrlist" />
		<seealso name="basicchapter03" module="max" type="tutorial" />
		<seealso name="datachapter05" module="max" type="tutorial" />
	</seealsolist>
	<misc name="Output">
		<entry name="list">
			<description>
				Out left outlet: Outputs the remaining list, that is, the stored list with matching input items removed. It will only trigger the outlet if any items are actually removed.
			</description>
		</entry>
		<entry name="bang">
			<description>
				Out right outlet: (bang) When all items from the stored list have been removed.
			</description>
		</entry>
	</misc>
</c74object>
