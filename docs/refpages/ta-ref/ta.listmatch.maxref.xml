<?xml version="1.0" encoding="utf-8" standalone="yes"?>

<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<!--This is an automatically generated file. DO NOT EDIT THIS FILE DIRECTLY. Rather, use the _ref.xml files found in the 'edits' folder.-->
<c74object name="ta.listmatch" module="max" category="Lists">
	<digest>
		Check if input matches items in a list
	</digest>
	<description>
		Store a list and count down matched items from an input stream. The matched item is then removed from the list, leaving only unmatched items stored. This behaviour can be looped using the <m>loop</m> attribute. Note that <o>ta.listmatch</o> is sensitve to the input format(int/float), thus "5" is different from "5.".
	</description>
	<!--METADATA-->
	<metadatalist>
		<metadata name="author">
			Tiago Ã‚ngelo
		</metadata>
		<metadata name="tag">
			TA-Library
		</metadata>
		<metadata name="tag">
			Control
		</metadata>
		<metadata name="tag">
			Data
		</metadata>
		<metadata name="tag">
			Lists
		</metadata>
	</metadatalist>
	<!--INLETS-->
	<inletlist>
		<inlet id="0" type="INLET_TYPE">
			<digest>
				Check if input elements match any item in the stored list
			</digest>
			<description>
				Trigger output if input elements match any item in the stored list and remove those items from storage. On the first message after (re)setting the stored list <o>ta.listmatch</o> will output the stored list size over the middle outlet, even if no input items match the stored list. Afterwards, when no items match there will be no output.
			</description>
		</inlet>
		<inlet id="1" type="INLET_TYPE">
			<digest>
				Store list
			</digest>
			<description>
				Store list to match with intput elements later.
			</description>
		</inlet>
	</inletlist>
	<!--OUTLETS-->
	<outletlist>
		<outlet id="0" type="OUTLET_TYPE">
			<digest>
				Matched value
			</digest>
			<description>
				Output iput items if they match items in the stored list.
			</description>
		</outlet>
		<outlet id="1" type="OUTLET_TYPE">
			<digest>
				Countdown
			</digest>
			<description>
				<o>ta.listmatch</o> carries a count of matched items, which is decremented and sent to the outlet whenever an item has been matched. 
			</description>
		</outlet>
		<outlet id="2" type="OUTLET_TYPE">
			<digest>
				Done
			</digest>
			<description>
				(bang) when there are no more unmatched items.
			</description>
		</outlet>
	</outletlist>
	<!--ARGUMENTS-->
	<objarglist>
		<objarg name="initial-list" optional="1" type="list">
			<digest>
				Set the initial stored list
			</digest>
			<description>
				Sets the initial list for element matching and countdown. 
			</description>
		</objarg>
	</objarglist>
	<!--MESSAGES-->
	<methodlist>
		<method name="int/float/list">
			<arglist>
				<arg name="input" optional="0" type="int/float/list" />
			</arglist>
			<digest>
				Check if input elements match any item in the stored list
			</digest>
			<description>
				Trigger output if input elements match any item in the stored list and remove those items from storage. If the input is a list and there is more than one matching item, <o>ta.listmatch</o> will output the countdown through the middle outlet whenever an item matches, and then outputs the matched items in a list through the left outlet.
			</description>
		</method>
		<method name="reset">
			<arglist />
			<digest>
				Reset memory
			</digest>
			<description>
				Start from last stored list.
			</description>
		</method>
		<method name="clear">
			<arglist />
			<digest>
				Clear storage memory
			</digest>
			<description>
				Empty memory storage. When cleared <o>ta.listremove</o> stays inactive until a list is provided for storage through the right inlet or a <m>reset</m> message is received in the left inlet, which will reset the object to the last stored list.
			</description>
		</method>
	</methodlist>
	<!--ATTRIBUTES-->
	<attributelist>
		<attribute name="maxsize" get="1" set="1" type="int" size="1">
			<digest>
				Maximum List Size
			</digest>
			<description>
				Maximum number of items to process. If the input list exceeds this size, excess items will be truncated. (default = 256)
			</description>
			<attributelist>
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Maximum List Size" />
				<attribute name="style" get="1" set="1" type="int" size="1" value="items" />
				<attribute name="units" get="1" set="1" type="int" size="1" value="256" />
			</attributelist>
		</attribute>
		<attribute name="duplicates" get="1" set="1" type="int" size="1">
			<digest>
				Duplicates
			</digest>
			<description>
				If turned off (zero) the stored list .
				If turned on (non-zero) removes duplicates from stored list.
				(default = 1)
			</description>
			<attributelist>
				<attribute name="basic" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Duplicates" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="onoff" />
			</attributelist>
		</attribute>
		<attribute name="loop" get="1" set="1" type="int" size="1">
			<digest>
				Loop
			</digest>
			<description>
				If turned off (zero) <o>ta.listmatch</o> will ignore input streams once all stored items have been matched. 
				If turned on (non-zero) resets <o>ta.listmatch</o> when all stored items have been matched, starting the countdown again.
				(default = 0)
			</description>
			<attributelist>
				<attribute name="basic" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Loop" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="onoff" />
			</attributelist>
		</attribute>
		<attribute name="order" get="1" set="1" type="int" size="1">
			<digest>
				Order
			</digest>
			<description>
				If turned off (zero) <o>ta.listmatch</o> will ignore the order by which elements are matched. 
				If turned on (non-zero) the stored list can only be matched in a left-to-right order. Meaning that the second element of the stored list can only be decremented if the first element has already been decremented and removed from storage.
				(default = 0)
			</description>
			<attributelist>
				<attribute name="basic" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Order" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="onoff" />
			</attributelist>
		</attribute>
	</attributelist>
	<!--EXAMPLE-->
	<examplelist>
		<example img="" caption="Have all C Major notes been played ?" />
	</examplelist>
	<!--SEEALSO-->
	<seealsolist>
		<seealso name="zl" />
		<seealso name="counter" />
		<seealso name="iter" />
		<seealso name="ta.crossover" />
		<seealso name="ta.listaccum" />
		<seealso name="ta.listchange" />
		<seealso name="ta.listcomparison" />
		<seealso name="ta.listremove" />
		<seealso name="ta.pattrlist" />
		<seealso name="basicchapter03" module="max" type="tutorial" />
		<seealso name="datachapter05" module="max" type="tutorial" />
	</seealsolist>
	<misc name="Output">
		<entry name="int/float">
			<description>
				Out left outlet: Matched item. The value format (int/float) will be preserved.
			</description>
		</entry>
		<entry name="int">
			<description>
				Out middle outlet: How many items from the stored list are still unmatched.
			</description>
		</entry>
		<entry name="bang">
			<description>
				Out right outlet: (bang) when all items from the stored list have been matched.
			</description>
		</entry>
	</misc>
</c74object>
