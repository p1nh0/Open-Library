<?xml version="1.0" encoding="utf-8" standalone="yes"?>

<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<!--This is an automatically generated file. DO NOT EDIT THIS FILE DIRECTLY. Rather, use the _ref.xml files found in the 'edits' folder.-->
<c74object name="ta.varfilter" module="max" category="Math">
	<digest>
		Filter variations
	</digest>
	<description>
		Filter input numbers if they vary above a given threshold.
	</description>
	<!--METADATA-->
	<metadatalist>
		<metadata name="author">
			Tiago Ângelo
		</metadata>
		<metadata name="tag">
			TA-Library
		</metadata>
		<metadata name="tag">
			Math
		</metadata>
	</metadatalist>
	<!--INLETS-->
	<inletlist>
		<inlet id="0" type="INLET_TYPE">
			<digest>
				Repeated to output if variation is lower than threshold
			</digest>
			<description>
				If the difference between the current input number and the previous number is bigger than the treshold, the input number is filtered. This is true for the &quot;first-order&quot; <m>type</m> attribute, for other types the behaviour is similar but the higher the order, the higher is the number of previous inputs taken. 
				<o>ta.varfilter</o> also works with two different output modes (see <m>mode</m> attribute), which can be used to keep the output number stream at the same rate as the input (&quot;continuous&quot;), by repeating previous numbers if the current input number is filtered, or to output numbers only if they are not filtered.
			</description>
		</inlet>
		<inlet id="1" type="INLET_TYPE">
			<digest>
				Variation threshold value
			</digest>
			<description>
				Filter input number if its variation, given some previous samples, is bigger than the threshold value.
			</description>
		</inlet>
	</inletlist>
	<!--OUTLETS-->
	<outletlist>
		<outlet id="0" type="OUTLET_TYPE">
			<digest>
				Filtered numbers
			</digest>
			<description>
				The output rate depends both on the input, <m>mode</m> and <m>type</m> attribute.
			</description>
		</outlet>
		<outlet id="1" type="OUTLET_TYPE">
			<digest>
				State
			</digest>
			<description>
				1 for Not Filtered and 0 for Filtered
			</description>
		</outlet>
	</outletlist>
	<!--ARGUMENTS-->
	<objarglist>
		<objarg name="threshold-value" optional="1" type="float">
			<digest>
				Set the threshold value
			</digest>
			<description>
				Filter input number if its variation, given some previous samples, is bigger than the threshold value.
				When there is no argument, the initial value is <m>1.</m>.
			</description>
		</objarg>
	</objarglist>
	<!--MESSAGES-->
	<methodlist>
		<method name="int">
			<arglist>
				<arg name="input" optional="0" type="int" />
			</arglist>
			<digest>
				Number stream to filter
			</digest>
			<description>
				The number is sent out the outlet only if its variation, given some previous samples, is lower then the threshold value.
			</description>
		</method>
		<method name="float">
			<arglist>
				<arg name="input" optional="0" type="float" />
			</arglist>
			<digest>
				Number stream to filter
			</digest>
			<description>
				The number is sent out the outlet only if its variation, given some previous samples, is lower then the threshold value.
			</description>
		</method>
		<method name="mode">
			<arglist>
				<arg name="mode (0 or 1)" optional="0" type="symbol" />
			</arglist>
			<digest>
				Set the output mode
			</digest>
			<description>
				Same as <m>mode</m> attribute.
			</description>
		</method>
		<method name="type">
			<arglist>
				<arg name="type {0..3}" optional="0" type="symbol" />
			</arglist>
			<digest>
				Set the filter type
			</digest>
			<description>
				Same as <m>type</m> attribute.
			</description>
		</method>
	</methodlist>
	<!--ATTRIBUTES-->
	<attributelist>
		<attribute name="mode" get="1" set="1" type="int" size="1">
			<digest>
				Output mode
			</digest>
			<description>
				(0) : "Discrete" — outputs numbers only if they were not filtered.
				(1) : "Continuous" - if current number was filtered, send out the previous (not filtered) number.
				(default = 0 : "Discrete")
			</description>
			<attributelist>
				<attribute name="basic" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="category" get="1" set="1" type="atom" size="1" value="Behavior" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Set Output behaviour" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="onoff" />
			</attributelist>
		</attribute>
		<attribute name="type" get="1" set="1" type="int" size="1">
			<digest>
				Filter type
			</digest>
			<description>
				(0) : "Bypass" — numbers received are directly passed to the output 
				<br></br>
				(1) : "1st-order" - filter input if the absolute difference between the current number and the previous number is bigger than the threshold value
				<br></br>
				(2) : "2nd-order" - filter input if any of the two previous difference calculations is bigger then the threshold value
				<br></br>
				(3) : "3rd-order" - filter input if any of the three previous difference calculations is bigger then the threshold value
				(default = 1 : 1st-order filter)
 			</description>
			<attributelist>
				<attribute name="basic" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="category" get="1" set="1" type="atom" size="1" value="Behavior" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Set filter type" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="type" />
			</attributelist>
		</attribute>
	</attributelist>
	<!--EXAMPLE-->
	<examplelist>
		<example img="" caption="Filter changes bigger than a given threshold" />
	</examplelist>
	<!--SEEALSO-->
	<seealsolist>
		<seealso name="peak" />
		<seealso name="exp" />
		<seealso name="ta.automean" />
	</seealsolist>
	<misc name="Output">
		<entry name="float">
			<description>
				Out left outlet: Filtered numbers. If the <m>type</m> attribute is bigger than &quot;0&quot;, <o>ta.varfilter</o> will produce a delay in the output, relative to the filter's order. So, if <o>ta.varfilter</o> type is 1st-order it will output data one sample behind, and if the type is 3rd-order the output will have a delay of 3 samples.
			</description>
		</entry>
		<entry name="int">
			<description>
				Out right outlet: outputs &quot;1&quot; when the input is not filtered, and &quot;0&quot; when the input is filtered.
			</description>
		</entry>
	</misc>
</c74object>
