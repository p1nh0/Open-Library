<?xml version="1.0" encoding="utf-8" standalone="yes"?>

<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<!--This is an automatically generated file. DO NOT EDIT THIS FILE DIRECTLY. Rather, use the _ref.xml files found in the 'edits' folder.-->
<c74object name="ta.prob-rhythm" module="max" category="MIDI">
	<digest>
		Generate rhythm throuhg unconditional probabilities
	</digest>
	<description>
		<o>ta.prob-rhythm</o> takes a rhythmic weight table (zeroth-order Markov chain) to generate rhythm, acting like a probabilistic sequencer.
	</description>
	<!--METADATA-->
	<metadatalist>
		<metadata name="author">
			Tiago Ã‚ngelo
		</metadata>
		<metadata name="tag">
			TA-Library
		</metadata>
		<metadata name="tag">
			MIDI
		</metadata>
		<metadata name="tag">
			Math
		</metadata>
		<metadata name="tag">
			Lists
		</metadata>
		<metadata name="reference">
			TEXT_HERE
		</metadata>
		<metadata name="license">
			TEXT_HERE
		</metadata>
	</metadatalist>
	<!--INLETS-->
	<inletlist>
		<inlet id="0" type="INLET_TYPE">
			<digest>
				Generate velocities
			</digest>
			<description>
				TEXT_HERE
			</description>
		</inlet>
		<inlet id="1" type="INLET_TYPE">
			<digest>
				Weight-table
			</digest>
			<description>
				List containing the probability of each step, from &quot;0.&quot; to &quot;1.&quot;.
			</description>
		</inlet>
		<inlet id="2" type="INLET_TYPE">
			<digest>
				Maximum velocity
			</digest>
			<description>
				Set the maximum velocity used for output.
			</description>
		</inlet>
		<inlet id="3" type="INLET_TYPE">
			<digest>
				Probability 
			</digest>
			<description>
				Set the overall output probability. If set to &quot;0&quot; there will be no output, but if set to &quot;100&quot; all steps will generate an output value. This way you can control the probability of all steps, which is musically very useful.
			</description>
		</inlet>
	</inletlist>
	<!--OUTLETS-->
	<outletlist>
		<outlet id="0" type="OUTLET_TYPE">
			<digest>
				Velocity values
			</digest>
			<description>
				Sends velocity values (0..127) if the current step is triggered.
			</description>
		</outlet>
		<outlet id="1" type="OUTLET_TYPE">
		<digest>
			Current step number
		</digest>
		<description>
			This value will be triggered whenever there is a <m>bang</m> received.
		</description>
		</outlet>
	</outletlist>
	<!--ARGUMENTS-->
	<objarglist>
		<objarg name="weight-table" optional="1" type="list">
			<digest>
				Set the initial weight-table
			</digest>
			<description>
				The number of items in this list will give the total number of steps used by the sequencer, where each value corresponds to the probability of that step. Step's weights are between &quot;0.&quot; (0% probability) and &quot;1.&quot; (100% probability).
			</description>
		</objarg>
	</objarglist>
	<!--MESSAGES-->
	<methodlist>
		<method name="bang">
			<arglist>
				<arg name="step-through" optional="0" type="bang" />
			</arglist>
			<digest>
				Step through weight-table
			</digest>
			<description>
				Outputs the next step of the provided weight-table. The total number of steps is the same as the weight-table size.
			</description>
		</method>
		<method name="int">
			<arglist>
				<arg name="step-to" optional="0" type="int" />
			</arglist>
			<digest>
				Go to step number immediatlely 
			</digest>
			<description>
				Outputs the step relative to the input number. The first step number is &quot;1&quot;.
			</description>
		</method>
		<method name="set">
			<arglist>
				<arg name="step-to" optional="0" type="int" />
			</arglist>
			<digest>
				Go to step number on next bang 
			</digest>
			<description>
				Sets the sequencer to the provided step number, without causing any output. <o>ta.prob-rhythm</o> will jump to that step on the next <m>bang</m> received.
			</description>
		</method>
		<method name="maxvel">
			<arglist>
				<arg name="maximum velocity" optional="0" type="int" />
			</arglist>
			<digest>
				Maximum velocity
			</digest>
			<description>
				Set the maximum velocity used for output.
			</description>
		</method>
		<method name="overall_prob">
			<arglist>
				<arg name="overall probability" optional="0" type="int" />
			</arglist>
			<digest>
				Probability
			</digest>
			<description>
				Set the overall output probability. If set to &quot;0&quot; there will be no output, but if set to &quot;100&quot; all steps will generate an output value. This way you can control the probability of all steps, which is musically very useful.
			</description>
		</method>
		<method name="seed">
			<arglist>
				<arg name="random-seed" optional="0" type="int" />
			</arglist>
			<digest>
				Seed the random number generator
			</digest>
			<description>
				Seeds the object's random generator, which causes a specific (reproducible) sequence of pseudo-random numbers to occur. The number <m>0</m> uses the time elapsed since system startup (an unpredictable value) as the seed, ensuring an unpredictable sequence of numbers.
			</description>
		</method>
	</methodlist>
	<!--ATTRIBUTES-->
	<attributelist>
		<attribute name="maxvel" get="1" set="1" type="int" size="1">
			<digest>
				Maximum velocity
			</digest>
			<description>
				Set the maximum velocity used for output.
				(default = 127)
			</description>
			<attributelist>
				<attribute name="basic" get="1" set="1" type="int" size="1" value="127" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Sort" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="velocity" />
			</attributelist>
		</attribute>
		<attribute name="overall_prob" get="1" set="1" type="int" size="1">
			<digest>
				Probability
			</digest>
			<description>
				Set the overall output probability. If set to &quot;0&quot; there will be no output, but if set to &quot;100&quot; all steps will generate an output value. This way you can control the probability of all steps, which is musically very useful.
				(default = 50)
			</description>
			<attributelist>
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Overall Probability" />
				<attribute name="style" get="1" set="1" type="int" size="1" value="percentage" />
				<attribute name="units" get="1" set="1" type="int" size="1" value="50" />
			</attributelist>
		</attribute>
		<attribute name="seed" get="1" set="1" type="int" size="1">
			<digest>
				Seed the random number generator
			</digest>
			<description>
				Seeds the object's random generator, which causes a specific (reproducible) sequence of pseudo-random numbers to occur. The number <m>0</m> uses the time elapsed since system startup (an unpredictable value) as the seed, ensuring an unpredictable sequence of numbers.
				(default = 0)
			</description>
			<attributelist>
				<attribute name="basic" get="1" set="1" type="int" size="1" value="0" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Seed" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="pseudo-random" />
			</attributelist>
		</attribute>
	</attributelist> 
	<!--EXAMPLE-->
	<examplelist>
		<example img="" caption="Generating rhythm throuhg probalities and genetic algorithms" />
	</examplelist>
	<!--SEEALSO-->
	<seealsolist>
		<seealso name="flush" />
		<seealso name="multislider" />
		<seealso name="counter" />
		<seealso name="drunk" />
		<seealso name="ta.clipnotes" />
		<seealso name="ta.filterintervals" />
		<seealso name="ta.heldnotes" />
		<seealso name="ta.note" />
		<seealso name="ta.note2vpr" />
		<seealso name="ta.vpr2note" />
		<seealso name="ta.sortnotes" />
		<seealso name="ta.stripnotetype" />
		<seealso name="ta.chordidentifier" />
		<seealso name="ta.findclosestnote" />
		<seealso name="ta.note2pitchclass" />
		<seealso name="ta.stripvelocity" />
	</seealsolist>
	<misc name="Output">
		<entry name="int">
			<description>
				Out left outlet: velocity output if step is triggered, which depends on the probability provided by the weight-table.
				Out right outlet: the current step number.
			</description>
		</entry>
	</misc>
</c74object>
