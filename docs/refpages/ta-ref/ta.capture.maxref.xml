<?xml version="1.0" encoding="utf-8" standalone="yes"?>

<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<!--This is an automatically generated file. DO NOT EDIT THIS FILE DIRECTLY. Rather, use the _ref.xml files found in the 'edits' folder.-->
<c74object name="ta.capture" module="max" category="Data">
	<digest>
		Store values to view or edit
	</digest>
	<description>
		Stores up to 512 items in the order they are received for viewing, editing, and saving. <o>ta.capture</o> is basically a wrapper for the <o>capture</o>, but it adds an important functionality when dealing with lists, since it can preserve the input list size, whereas <o>capture</o> does not.
	</description>
	<!--METADATA-->
	<metadatalist>
		<metadata name="author">
			Tiago Ã‚ngelo
		</metadata>
		<metadata name="tag">
			TA-Library
		</metadata>
		<metadata name="tag">
			Data
		</metadata>
	</metadatalist>
	<!--INLETS-->
	<inletlist>
		<inlet id="0" type="INLET_TYPE">
			<digest>
				Data to be Captured
			</digest>
			<description>
				TEXT_HERE
			</description>
		</inlet>
		<inlet id="1" type="INLET_TYPE">
			<digest>
			</digest>
			<description>
				TEXT_HERE
			</description>
		</inlet>
	</inletlist>
	<!--OUTLETS-->
	<outletlist>
		<outlet id="0" type="OUTLET_TYPE">
			<digest>
				Sequential Output from dump Message
			</digest>
			<description>
				TEXT_HERE
			</description>
		</outlet>
		<outlet id="1" type="OUTLET_TYPE">
			<digest>
				Item Count Outlet
			</digest>
			<description>
				TEXT_HERE
			</description>
		</outlet>
	</outletlist>
	<!--ARGUMENTS-->
	<objarglist>
		<objarg name="maximum" optional="1" type="int">
			<digest>
				Maximum number of items.
			</digest>
			<description>
				The first argument sets a maximum number of items to store. If there is no argument, <o>capture</o> will store up to 512 items. Once the maximum has been exceeded, the earliest stored item is dropped as each new item is received.
			</description>
		</objarg>
		<objarg name="display-format" optional="1" type="symbol">
			<digest>
				Formatting of data display
			</digest>
			<description>
				If the second argument is <m>a</m>, all items will be displayed in ASCII form in the editing window. If the second argument is <m>x</m>, all numbers will be displayed in hexadecimal form in the editing window. If the second argument is <m>m</m>, numbers less than 128 are displayed in decimal, and numbers greater than 128 are in hexadecimal. If there is no argument, all items are displayed in decimal.
			</description>
		</objarg>
	</objarglist>
	<!--MESSAGES-->
	<methodlist>
		<method name="int">
			<arglist>
				<arg name="input" optional="0" type="int" />
			</arglist>
			<digest>
				Capture value and store
			</digest>
			<description>
				Numbers or symbols are stored in the order in which they are received.
			</description>
		</method>
		<method name="float">
			<arglist>
				<arg name="input" optional="0" type="float" />
			</arglist>
			<digest>
				Capture value and store
			</digest>
			<description>
				Numbers or symbols are stored in the order in which they are received.
			</description>
		</method>
		<method name="list">
			<arglist>
				<arg name="input" optional="0" type="list" />
			</arglist>
			<digest>
				Capture values and store
			</digest>
			<description>
				All numbers and/or symbols in the list are stored in order from first to last.
			</description>
		</method>
		<method name="anything">
			<arglist>
				<arg name="input" optional="0" type="list" />
			</arglist>
			<digest>
				Capture values and store
			</digest>
			<description>
				All numbers and/or symbols are stored in order from first to last.
			</description>
		</method>
		<method name="(mouse)">
			<digest>
				Display captured values
			</digest>
			<description>
				Double-clicking on the object in a locked patcher will open a window which displays all values stored internally.
			</description>
		</method>
		<method name="clear">
			<arglist />
			<digest>
				Clear stored values
			</digest>
			<description>
				Erases the contents of a <o>capture</o> object.
			</description>
		</method>
		<method name="dump">
			<arglist />
			<digest>
				Output all stored values
			</digest>
			<description>
				Outputs the contents of the <o>capture</o> object inside. If <m>outmode</m> attribute is set to 0, then <o>ta.capture</o> will output one item at a time, out the left outlet, just like <o>capture</o>. Otherwise <o>ta.capture</o> will output items just like they were received.
			</description>
		</method>
		<method name="count">
			<arglist>
				<arg name="input" optional="0" type="int" />
			</arglist>
			<digest>
				Report item count
			</digest>
			<description>
				Sends the number of items collected since the last <m>count</m> message out the right outlet of the <o>capture</o> object.
			</description>
		</method>
		<method name="open">
			<arglist />
			<digest>
				Open the viewing window
			</digest>
			<description>
				Causes the window associated with the <o>capture</o> object to become visible. The window is also brought to the front. Double-clicking on the <o>capture</o> object in a locked patcher has the same effect.
			</description>
		</method>
		<method name="wclose">
			<arglist />
			<digest>
				Close the viewing window
			</digest>
			<description>
				Closes the window associated with the <o>capture</o> object.
			</description>
		</method>
		<method name="write">
			<arglist>
				<arg name="filename" optional="0" type="symbol" />
			</arglist>
			<digest>
				Write captured data to disk
			</digest>
			<description>
				The word <m>write</m>, followed by a symbol, saves the contents of the <o>capture</o> object into a text file, using the symbol as the filename.
			</description>
			<discussion>
				The file will be saved in the same folder as the Max application, unless the symbol is a pathname specifying some other folder (such as <m>write &quot;MyDisk:/Documents/Captured Data/outputfile&quot;</m>). The word <m>write</m> by itself causes a standard Save As dialog box to be opened, allowing you to name the file and save it in the desired folder.
			</discussion>
		</method>
		<method name="outmode">
			<arglist />
			<digest>
				Set output mode
			</digest>
			<description>
				If &quot;outmode = 0&quot; then <o>ta.capture</o> has the same behaviour as <o>capture</o>. But if &quot;outmode = 1&quot; <o>ta.capture</o> will maintain the same input list size when values are dumped. The default value is 1. Note that changing the output mode will clear all captured data. 
			</description>
		</method>
	</methodlist>
	<!--ATTRIBUTES-->
	<attributelist>
		<attribute name="outmode" get="1" set="1" type="int" size="1">
			<digest>
				Output mode
			</digest>
			<description>
				If &quot;outmode = 0&quot; then <o>ta.capture</o> has the same behaviour as <o>capture</o>. But if &quot;outmode = 1&quot; <o>ta.capture</o> will maintain the same input list size when values are dumped. The default value is 1. Note that changing the output mode will clear all captured data.  
			</description>
			<attributelist>
				<attribute name="basic" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Outmode" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="onoff" />
			</attributelist>
		</attribute>
	</attributelist>
	<!--EXAMPLE-->
	<examplelist>
		<example img="" caption="Comparison between 'capture' and 'ta.capture'." />
	</examplelist>
	<!--SEEALSO-->
	<seealsolist>
		<seealso name="capture" />
		<seealso name="itable" />
		<seealso name="text" />
	</seealsolist>
	<misc name="Output">
		<entry name="int, float, symbol">
			<description>
				Out left outlet: The captured contents are sent out the left outlet, one at a time, in response to the <m>dump</m> message.
				<br />
				<br />
				Double-clicking on <o>capture</o> (when the patcher window is locked) opens an editing window in which the stored numbers can be viewed and edited. Editing the window does not actually alter the contents of capture, but is useful for cutting and pasting values into a <o>table</o> or a separate file. (Although <o>capture</o> can continue to store items while the editing window is open, the editing window is not updated. It must be closed and reopened to view the newly stored items.)
			</description>
		</entry>
		<entry name="int">
			<description>
				Out right outlet: The number of items received since last <m>count</m> message was received is sent out the right outlet in response to a <m>count</m> message.
			</description>
		</entry>
	</misc>
</c74object>
