<?xml version="1.0" encoding="utf-8" standalone="yes"?>

<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<!--This is an automatically generated file. DO NOT EDIT THIS FILE DIRECTLY. Rather, use the _ref.xml files found in the 'edits' folder.-->
<c74object name="ta.listlearn" module="max" category="Lists">
	<digest>
		Learn unique elements from data streams
	</digest>
	<description>
		Collects non-repeating symbols from an input stream of data and outputs them in a list format, also keeping a count of unique items collected.
	</description>
	<!--METADATA-->
	<metadatalist>
		<metadata name="author">
			Tiago Ã‚ngelo
		</metadata>
		<metadata name="tag">
			TA-Library
		</metadata>
		<metadata name="tag">
			Lists
		</metadata>
		<metadata name="tag">
			Data
		</metadata>
		<metadata name="reference">
			TEXT_HERE
		</metadata>
		<metadata name="license">
			TEXT_HERE
		</metadata>
	</metadatalist>
	<!--INLETS-->
	<inletlist>
		<inlet id="0" type="int">
			<digest>
				Object control
			</digest>
			<description>
				&quot;0/1&quot; closes/opens <o>ta.listlearn</o> internal gate, respectively.
			</description>
		</inlet>
			<inlet id="0" type="symbol">
			<digest>
				Reset
			</digest>
			<description>
				The <m>reset</m> message will clear the object's internal memory.
			</description>
		</inlet>
			<inlet id="1" type="anything">
			<digest>
				Learn elements
			</digest>
			<description>
				Collect unique elements received in this inlet. Messages to this inlet will be ignored when <o>ta.listlearn</o> gate is closed.
			</description>
		</inlet>
	</inletlist>
	<!--OUTLETS-->
	<outletlist>
		<outlet id="0" type="symbol">
			<digest>
				Unique elements
			</digest>
			<description>
				List containing all learnt elements, without repititions. Use <o>fromsymbol</o> to convert the output into a list format.
			</description>
		</outlet>
		<outlet id="1" type="int">
			<digest>
				Total number of unique elements
			</digest>
			<description>
				TEXT_HERE
			</description>
		</outlet>
		<outlet id="2" type="int">
			<digest>
				State
			</digest>
			<description>
				Outputs <o>ta.listlearn</o> internal gate status. &quot;0&quot; if the gate is closed and &quot;1&quot; if the gate is open.
			</description>
		</outlet>
	</outletlist>
	<!--ARGUMENTS-->
	<objarglist>
		<objarg name="rounds" optional="1" type="int">
			<digest>
				Rounds
			</digest>
			<description>
				Number of input messages (in the right inlet) without any different elements from what has been learned so far. When <o>ta.listlearn</o> reaches a cycle of consecutive rounds without any different elements in the input stream it will reset itself and ignore further input streams. Until a &quot;1&quot; is received in the left inlet.
				If no argument is provided <o>ta.listlearn</o> will not reset itself automatically.
				(default = no argument)
			</description>
		</objarg>
	</objarglist>
	<!--MESSAGES-->
	<methodlist>
		<method name="0/1">
			<arglist />
			<digest>
				Gate
			</digest>
			<description>
				A &quot;0/1&quot; in the left inlet will cause <o>ta.listlearn</o> to open/close input data processing for messages received in the right inlet.
				<br />
				0 : <o>ta.listlearn</o> will ignore input elements.
				<br />
				1 : <o>ta.listlearn</o> will learn new input elements.
			</description>
		</method>
		<method name="symbol">
			<arglist>
				<arg name="elements to learn" optional="1" type="anything" />
			</arglist>
			<digest>
				Elements to learn
			</digest>
			<description>
				If <o>ta.listlearn</o> internal gate is open, input symbols in the right inlet will be collected, eliminating repeated elements. Otherwise messages to the right inlet will be ignored.
			</description>
		</method>
		<method name="reset">
			<arglist />
			<digest>
				Reset
			</digest>
			<description>
				Clear <o>ta.listlearn</o> memory.
			</description>
		</method>
	</methodlist>
	<!--ATTRIBUTES-->
	<attributelist>
		<attribute name="state" get="1" set="1" type="int" size="1">
			<digest>
				State
			</digest>
			<description>
				&quot;0&quot;: close <o>ta.listlearn</o> gate, ignoring messages on the right inlet.
				<br />
				<br />
				&quot;1&quot;: open <o>listlearn</o> gate, collecting new symbols received in the right inlet.
				(default = 0)
			</description>
			<attributelist>
				<attribute name="basic" get="1" set="1" type="int" size="1" value="0" />
				<attribute name="default" get="1" set="1" type="int" size="1" value="0" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="State" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="on/off" />
			</attributelist>
		</attribute>
		<attribute name="defer" get="1" set="1" type="int" size="1">
			<digest>
				Defer
			</digest>
			<description>
				&quot;0&quot;: execute on high-priority thread.
				<br />
				<br />
				&quot;1&quot;: execute on low-priority thread.
				(default = 0)
			</description>
			<attributelist>
				<attribute name="basic" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="default" get="1" set="1" type="int" size="1" value="0" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Defer" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="onoff" />
			</attributelist>
		</attribute>
	</attributelist>
	<!--EXAMPLE-->
	<examplelist>
		<example img="" caption="" />
	</examplelist>
	<!--SEEALSO-->
	<seealsolist>
		<seealso name="zl" />
		<seealso name="ta.listchange" />
		<seealso name="ta.listcomparison" />
		<seealso name="ta.listcrossover" />
		<seealso name="ta.listmatch" />
		<seealso name="ta.pattrlist" />
	</seealsolist>
	<misc name="Output">
		<entry name="symbol">
			<description>
				Out left outlet: Learnt elements, without repititions. If you need the output to be in list format just use <o>fromsymbol</o>.
			</description>
		</entry>
		<entry name="int">
			<description>
				Out middle outlet: How many unrepeated items were stored.
			</description>
		</entry>
		<entry name="0/1">
			<description>
				Out right outlet: <o>ta.listlearn</o> state. If the state is &quot;1&quot; <o>ta.listlearn</o> will collect new itmes received in the right inlet, otherwise it will ignore messages in that same inlet.
			</description>
		</entry>
	</misc>
</c74object>
